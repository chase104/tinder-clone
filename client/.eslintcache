[{"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\index.js":"1","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\reportWebVitals.js":"2","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\App.js":"3","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\header\\Header.js":"4","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\individual-chat\\IndividualChat.js":"5","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Dashboard.js":"6","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\ChatsPage.js":"7","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\cards-components\\TinderCards.js":"8","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\chat\\Chat.js":"9","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\swipe-buttons\\SwipeButtons.js":"10","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\NewUser.js":"11","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Login.js":"12","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\context.js":"13","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\routes\\LoggedInRoute.js":"14","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\routes\\LoggedOutRoute.js":"15","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Account.js":"16","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\mongochat\\index.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1960,"mtime":1619771548365,"results":"21","hashOfConfig":"19"},{"size":3992,"mtime":1621680812313,"results":"22","hashOfConfig":"19"},{"size":2382,"mtime":1619712805652,"results":"23","hashOfConfig":"19"},{"size":428,"mtime":1608925674849,"results":"24","hashOfConfig":"19"},{"size":987,"mtime":1620149504587,"results":"25","hashOfConfig":"19"},{"size":2525,"mtime":1620145753545,"results":"26","hashOfConfig":"19"},{"size":595,"mtime":1619273262602,"results":"27","hashOfConfig":"19"},{"size":876,"mtime":1609140141766,"results":"28","hashOfConfig":"19"},{"size":3828,"mtime":1615035029771,"results":"29","hashOfConfig":"19"},{"size":4341,"mtime":1619374667889,"results":"30","hashOfConfig":"19"},{"size":726,"mtime":1615191288136,"results":"31","hashOfConfig":"19"},{"size":987,"mtime":1615193235971,"results":"32","hashOfConfig":"19"},{"size":999,"mtime":1615193385047,"results":"33","hashOfConfig":"19"},{"size":2156,"mtime":1619179965183,"results":"34","hashOfConfig":"19"},{"size":651,"mtime":1619781564677,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"pbrdke",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\index.js",[],["80","81"],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\reportWebVitals.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\App.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\header\\Header.js",["82","83","84","85"],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\individual-chat\\IndividualChat.js",["86"],"import React, {useState, useEffect} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport './IndividualChat.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nconst IndividualChat = (props) => {\r\n\r\n  console.log(props.match.params.person)\r\n\r\n  const [messages, setMessages] = useState([\r\n\r\n  ])\r\n\r\n  useEffect(() => {\r\n      async function fetchData() {\r\n        const req = await axios({\r\n          method: \"GET\",\r\n          url: `/tinder/getchat/6043bcb97dc63d2c7811eae0`\r\n        })\r\n      }\r\n      fetchData();\r\n  })\r\n  const [inputData, setInputData] = useState(null)\r\n  var inputField = document.getElementById(\"chatInput\");\r\n\r\n  const handleSend = (e) => {\r\n    e.preventDefault();\r\n    setMessages([...messages, {message:inputData}])\r\n    setInputData(null)\r\n    inputField.value=''\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setInputData(e.target.value)\r\n    console.log(inputData);\r\n\r\n  }\r\n\r\n  console.log(inputField);\r\n  return (\r\n    <div className=\"chatHolder\">\r\n      <p className=\"matchDetails\">YOU MATCHED WITH AINA ON 09/08/2017</p>\r\n      <div className=\"messageContainer\">\r\n      {messages.map(message => {\r\n          if (message.name){\r\n            return(\r\n              <div className=\"messageHolderMatched\">\r\n              <Avatar\r\n              src=\"https://scontent-mad1-1.xx.fbcdn.net/v/t1.0-9/70744285_10212279152093716_3243885904137289728_n.jpg?_nc_cat=105&ccb=2&_nc_sid=174925&_nc_ohc=_K-UnzRftNEAX-28wnf&_nc_oc=AQmHoYdMXIqb7S_gQ0oAGd-UuerxqWOJNF40eKZ9zllE487lIzTstsNO1kKGlWrlY6g&_nc_ht=scontent-mad1-1.xx&oh=a6ea0015d3dab0c1964659da9ac5571e&oe=6007608B\"\r\n              />\r\n                <p className=\"messageMatched\">{message.message}</p>\r\n              </div>\r\n            )\r\n          } else {\r\n            return (\r\n              <div className=\"messageHolderUser\">\r\n                <p className=\"messageUser\">{message.message}</p>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      )}\r\n      </div>\r\n\r\n        <form className=\"chatInputForm\" onSubmit={handleSend} autocomplete=\"off\">\r\n          <input type=\"text\" placeholder=\"type a message...\" className=\"chatInput\" id=\"chatInput\" onChange={(e) => handleInputChange(e)} />\r\n          <Button className=\"chatInputButton\" onClick={handleSend}>SEND</Button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndividualChat\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Dashboard.js",["87"],"import React from 'react'\r\nimport Header from '../components/header/Header'\r\nimport SwipeButtons from '../components/swipe-buttons/SwipeButtons'\r\nimport TinderCards from '../components/cards-components/TinderCards.js'\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n\r\n\r\n      {/* Tinder Cards */}\r\n      <TinderCards />\r\n      {/* SwipeButtons */}\r\n      <SwipeButtons />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\ChatsPage.js",["88","89"],"import React, {useState, useEffect} from 'react'\r\nimport './ChatsPage.css'\r\nimport Chat from '../components/chat/Chat.js'\r\nimport axios from 'axios'\r\n\r\nconst ChatsPage = () => {\r\n  const [chats, setChats] = useState()\r\n\r\n\r\n  useEffect(() => {\r\n    // get chats\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"/get-chats\"\r\n    }).then((res) => {\r\n     console.log(res);\r\n     console.log(res.data);\r\n    })\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Chat\r\n        name=\"e e\"\r\n        id=\"6043bcb97dc63d2c7811eae0\"\r\n        message=\"Hey! How are you? :)\"\r\n        timestamp=\"35 minutes ago\"\r\n        profilePic=\"https://scontent-mad1-1.xx.fbcdn.net/v/t1.0-9/70744285_10212279152093716_3243885904137289728_n.jpg?_nc_cat=105&ccb=2&_nc_sid=174925&_nc_ohc=_K-UnzRftNEAX-28wnf&_nc_oc=AQmHoYdMXIqb7S_gQ0oAGd-UuerxqWOJNF40eKZ9zllE487lIzTstsNO1kKGlWrlY6g&_nc_ht=scontent-mad1-1.xx&oh=a6ea0015d3dab0c1964659da9ac5571e&oe=6007608B\"\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatsPage\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\cards-components\\TinderCards.js",["90"],"import React, {useState, useEffect} from 'react'\r\nimport TinderCard from \"react-tinder-card\"\r\nimport axios from 'axios'\r\nimport './TinderCards.css'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nfunction TinderCards() {\r\n\r\n  const [people, setPeople] = useState([])\r\n  const [loaderState, setLoaderState] = useState(true)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(\"running backend fetch...\");\r\n      const req = await axios({\r\n        method: \"GET\",\r\n        url: \"/tinder/cards\"\r\n      })\r\n      setPeople(req.data);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(people);\r\n  }, [people]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoaderState(false)\r\n    }, 10000)\r\n  }, [])\r\n\r\n  console.log(people);\r\n\r\n\r\n  const outOfFrame = (dir, name, personId) => {\r\n    console.log(name + \" left the screen! \", dir, personId);\r\n    if (dir === \"right\") {\r\n      console.log(\"it's a match!\")\r\n      axios({\r\n        method: \"PUT\",\r\n        url: \"/tinder/match\",\r\n        data: {name, personId}\r\n      }).then((res) => {\r\n        console.log(res);\r\n      })\r\n    } else {\r\n      console.log(\" oh no ! \");\r\n    }\r\n  }\r\n\r\n  const getImage = (id) => {\r\n    return (\r\n      <img src={`/get-image/${id}`} className=\"user-image\"/>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"tinderCards\">\r\n      <div className=\"tinderCards__cardContainer\">\r\n        { people.length >= 1 ? people.map((person) => {\r\n          console.log(person);\r\n          return (\r\n          <TinderCard\r\n          className=\"swipe\"\r\n          key={person.name}\r\n          preventSwipe={[\"up\", \"down\"]}\r\n          onCardLeftScreen={(dir) => outOfFrame(dir, person.name, person._id)}\r\n          >\r\n            <div className=\"card\">\r\n              {getImage(person._id)}\r\n              <h3 style={{backgroundColor:\"rgba(89, 89, 89, .9)\", borderRadius: \"20px\", padding: \"5px\"}}>{person.name}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        )\r\n        }\r\n\r\n) :\r\n        <div className=\"loader\">\r\n          { loaderState ?\r\n              <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#004aad\"\r\n              className=\"loader-item\"\r\n              height={200}\r\n              width={200}\r\n              timeout={10000}\r\n              />\r\n            :\r\n            <div style={{fontSize: \"24px\", fontWeight: \"bold\"}}>Connection error, please refresh page</div>\r\n          }\r\n        </div>\r\n\r\n      }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TinderCards\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\chat\\Chat.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\components\\swipe-buttons\\SwipeButtons.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\NewUser.js",["91"],"import React, {useState, useEffect} from 'react'\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport FilePondPluginImageResize from 'filepond-plugin-image-resize';\r\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios'\r\n\r\nimport 'filepond/dist/filepond.min.css';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  container:{\r\n    maxWidth: \"80vw\",\r\n    margin: \"20px auto 100px auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  button: {\r\n    maxWidth: \"fit-content\"\r\n  },\r\n  text:{\r\n    maxWidth: \"300px\",\r\n    margin: \"12px 0px\"\r\n  },\r\n  error:{\r\n    color: \"red\",\r\n    fontSize: \"16px\",\r\n    margin: \"8px 0px\"\r\n  }\r\n});\r\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginImageResize, FilePondPluginFileEncode);\r\n\r\nconst NewUser = () => {\r\n  const classes = useStyles()\r\n  const [pond, setPond] = useState()\r\n  const [image, setImage] = useState(null)\r\n  const [user, setUser] = useState({})\r\n  const [error, setError] = useState({\r\n    errorPresent: false,\r\n    message: null\r\n  })\r\n  useEffect(() => {\r\n    console.log(image);\r\n  }, [image])\r\n  const handleInit = () => {\r\n    console.log(\"filepond initiated: \", pond);\r\n  }\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.id]: e.target.value\r\n    })\r\n\r\n  }\r\n  const handleImageUpload = (file) => {\r\n    console.log(file);\r\n    setImage(file)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    console.log(image);\r\n    if (user.email === undefined || user.firstname === undefined || user.password === undefined || image === null) {\r\n      setError({\r\n        errorPresent: true,\r\n        message: \"All fields Required\"\r\n      })\r\n    } else {\r\n      var fd = new FormData();\r\n      fd.append('image', image)\r\n      fd.append('email',  user.email)\r\n      fd.append('name',  user.firstname + \" \" + user.lastname)\r\n      fd.append('password',  user.password)\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/newuser\",\r\n      data: fd,\r\n    }).then((res) => {\r\n      let message = res.data.message\r\n      if (message) {\r\n        setError({\r\n          errorPresent: true,\r\n          message: message\r\n        })\r\n      }\r\n    })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1 style={{marginBottom: \"20px\"}}>Create Profile</h1>\r\n      <TextField variant=\"outlined\" label=\"First Name\" id=\"firstname\"  onChange={(e) => handleChange(e)} className={classes.text}/>\r\n      <TextField variant=\"outlined\" label=\"Last Name\" id=\"lastname\" onChange={(e) => handleChange(e)} className={classes.text}/>\r\n      <TextField variant=\"outlined\" label=\"Email\" id=\"email\" onChange={(e) => handleChange(e)} className={classes.text}/>\r\n      <TextField variant=\"outlined\" label=\"Password\" id=\"password\" onChange={(e) => handleChange(e)} className={classes.text}/>\r\n      <h3 style={{marginTop: \"20px\"}}>Upload a picture of yourself:</h3>\r\n\r\n      <FilePond ref={ref => setPond(ref)}\r\n        id=\"image\"\r\n        allowMultiple={false}\r\n        onupdatefiles={(fileItems) => handleImageUpload(fileItems[0].file)}\r\n        oninit={() => handleInit()}\r\n        />\r\n        {\r\n          error.errorPresent === false ? null :\r\n          <div className={classes.error}>{error.message}</div>\r\n        }\r\n      <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => handleSubmit()}>Submit</Button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewUser\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Login.js",["92","93"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport { AppContext } from '../context.js'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport './login.css'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"5vh 10vw 5vh 10vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  input:{\r\n    marginTop: \"8px\",\r\n    width: \"fit-content\"\r\n  },\r\n  inputContainer:{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    marginTop:\"8px\",\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({})\r\n  const [modalState, setModalState] = useState(false)\r\n\r\n\r\n\r\n  const { setState } = useContext(AppContext)\r\n\r\n  const classes = useStyles()\r\n\r\n  const closeModal = () => {\r\n    setModalState(false)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setFormState({\r\n      ...formState,\r\n      [e.target.id]: e.target.value\r\n    })\r\n\r\n  }\r\n  const handleGuestClick = async () => {\r\n    await axios({\r\n      method: \"POST\",\r\n      data: {\r\n        email: \"w@w\",\r\n        password: \"w\"\r\n      },\r\n      withCredentials: true,\r\n      url: \"/login\"\r\n    }).then((res) => {\r\n      if (res.data.loggedIn === true) {\r\n        setState({\r\n          loggedIn: true\r\n        })\r\n        props.history.push(\"/\")\r\n      } else {\r\n        console.log('nope...');\r\n      }\r\n    })\r\n  }\r\n  const handleSubmit = async () => {\r\n    await axios({\r\n      method: \"POST\",\r\n      data: {\r\n        email: formState.email,\r\n        password: formState.password\r\n      },\r\n      withCredentials: true,\r\n      url: \"/login\"\r\n    }).then((res) => {\r\n      if (res.data.loggedIn === true) {\r\n        setState({\r\n          loggedIn: true\r\n        })\r\n        props.history.push(\"/\")\r\n      } else {\r\n        console.log('nope...');\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkUser = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"/check\"\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n    })\r\n  }\r\n\r\n  const modalMessage = (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-title\">App Options</div>\r\n      <div className=\"columns\">\r\n        <div className=\"column-one\">\r\n          <div className=\"top-row\">\r\n            <div className=\"one\">1</div>\r\n            <div className=\"column-title\">Login</div>\r\n          </div>\r\n          <div className=\"column-content\">\r\n            <div className=\"title\">\r\n              <div>Email:</div>\r\n              <div>Password:</div>\r\n            </div>\r\n            <div className=\"content\">\r\n              <div>email@email.com</div>\r\n              <div>password</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"column-two\">\r\n          <div className=\"top-row\">\r\n            <div className=\"one\">2</div>\r\n            <div className=\"column-title\">Sign up</div>\r\n          </div>\r\n          <div className=\"column-content\">\r\n            <ExitToAppIcon className=\"sign-in\" />\r\n          </div>\r\n        </div>     \r\n       </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Login</h1>\r\n      <div className={classes.inputContainer}>\r\n      <TextField variant=\"outlined\" id=\"email\" label=\"email\" className={classes.input} onChange={(e) => handleChange(e)}></TextField>\r\n      <TextField variant=\"outlined\" id=\"password\" label=\"password\" className={classes.input} onChange={(e) => handleChange(e)}></TextField>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => handleSubmit()}>Login</Button>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => handleGuestClick()}>Use Guest Account</Button>\r\n      </div>\r\n      <Modal\r\n      open={modalState}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      disableScrollLock={true}\r\n      >\r\n      {\r\n        modalMessage\r\n      }\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\context.js",["94"],"import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const AppContext = createContext(null)\r\n\r\nexport function AppProvider ({children}) {\r\n\r\n  const [state, setState] = useState({\r\n    loggedIn: null\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"check\"\r\n    }).then((res) => {\r\n      console.log(res);\r\n      if (res.data.user === false){\r\n        setState({\r\n          loggedIn: false\r\n        })\r\n      } else {\r\n        setState({\r\n          loggedIn: true\r\n        })\r\n      }\r\n    })\r\n  }, [window.location])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n    value={{state, setState}}\r\n    >\r\n    {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\routes\\LoggedInRoute.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\routes\\LoggedOutRoute.js",[],"C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\Account.js",["95","96","97","98"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"5vh 5vw 0 5vw\",\r\n    display: \"flex\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  image:{\r\n    maxHeight: \"60vh\",\r\n    borderRadius: \"114px\"\r\n  },\r\n\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles()\r\n\r\n  const [accountState, setAccountState] = useState(false)\r\n  const [image, setImage] = useState(false)\r\n  const [id, setId] = useState(false)\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"/get-account\"\r\n    }).then((res) => {\r\n      console.log(res);\r\n      setAccountState({\r\n        email: res.data.email,\r\n        name: res.data.name\r\n      })\r\n      setId(res.data._id)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      { accountState ?\r\n        <div className={classes.container}>\r\n        <div>\r\n          {\r\n            id ? <img src={`/get-image/${id}`} className={classes.image}/> : null\r\n          }\r\n        </div>\r\n          {\r\n            accountState ? <div style={{padding: \"20px\", background: \"lightgrey\", height: \"fit-content\", marginLeft: \"8px\"}}>\r\n          {\r\n            Object.keys(accountState).map((key) => {\r\n              return (\r\n                <div style={{display: \"flex\", alignItems: \"center\", height: \"fit-content\"}}>\r\n                  <div style={{fontSize: \"20px\", fontWeight: \"bold\", marginRight: \"12px\"}}>{key}:</div>\r\n                  <div>{accountState[key]}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n            </div>\r\n            : null\r\n          }\r\n        </div>\r\n        :\r\n        <div className=\"loader\">\r\n          {\r\n              <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#004aad\"\r\n              className=\"loader-item\"\r\n              height={200}\r\n              width={200}\r\n              timeout={100000}\r\n              />\r\n          }\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Account\r\n","C:\\Users\\John\\Documents\\Programing\\Apps\\tinder\\client\\src\\pages\\mongochat\\index.js",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport './styles.css'\r\n\r\nconst MongoChat = () => {\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"submitted\");\r\n    }\r\n    return (\r\n        <div className=\"mongochat-container\">\r\n            <div className=\"messages\">\r\n                message one\r\n            </div>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <input type=\"text\" onChange={(e) => handleChange(e)} />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MongoChat\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":22,"column":16,"nodeType":"107","messageId":"108","endLine":22,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":97,"column":43,"nodeType":"107","messageId":"108","endLine":97,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":108,"column":57,"nodeType":"107","messageId":"108","endLine":108,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":111,"column":55,"nodeType":"107","messageId":"108","endLine":111,"endColumn":57},{"ruleId":"109","severity":1,"message":"110","line":17,"column":15,"nodeType":"111","messageId":"112","endLine":17,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"114","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":15},{"ruleId":"109","severity":1,"message":"115","line":7,"column":17,"nodeType":"111","messageId":"112","endLine":7,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":56,"column":7,"nodeType":"118","endLine":56,"endColumn":61},{"ruleId":"109","severity":1,"message":"119","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":42},{"ruleId":"109","severity":1,"message":"120","line":1,"column":39,"nodeType":"111","messageId":"112","endLine":1,"endColumn":48},{"ruleId":"109","severity":1,"message":"121","line":97,"column":9,"nodeType":"111","messageId":"112","endLine":97,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":28,"column":6,"nodeType":"124","endLine":28,"endColumn":23,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":10,"column":5,"nodeType":"128","messageId":"108","endLine":10,"endColumn":12},{"ruleId":"109","severity":1,"message":"129","line":25,"column":10,"nodeType":"111","messageId":"112","endLine":25,"endColumn":15},{"ruleId":"109","severity":1,"message":"130","line":25,"column":17,"nodeType":"111","messageId":"112","endLine":25,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":47,"column":18,"nodeType":"118","endLine":47,"endColumn":75},{"ruleId":"109","severity":1,"message":"131","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"120","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'req' is assigned a value but never used.","Identifier","unusedVar","'Header' is defined but never used.","'chats' is assigned a value but never used.","'setChats' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FilePondPluginImageExifOrientation' is defined but never used.","'useEffect' is defined but never used.","'checkUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location'. Either exclude it or remove the dependency array. Outer scope values like 'window.location' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["134"],"no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: []",{"range":"137","text":"138"},[576,593],"[]"]